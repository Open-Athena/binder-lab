Bootstrap: docker
From: nvidia/cuda:12.2.2-cudnn8-runtime-ubuntu22.04

%post
    # Set non-interactive frontend
    export DEBIAN_FRONTEND=noninteractive
    
    # Install dependencies
    apt-get update && apt-get install -y \
        build-essential \
        git \
        curl \
        wget \
        jq \
        libgomp1 \
        libxml2-dev \
        zip \
        default-jre \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*
    
    # Create directories that will be accessible
    mkdir -p /opt/miniconda3
    mkdir -p /opt/boltz
    mkdir -p /analysis
    
    # Download and install miniconda
    cd /tmp
    wget -nv https://repo.anaconda.com/miniconda/Miniconda3-py311_24.11.1-0-Linux-x86_64.sh
    bash Miniconda3-*.sh -b -p /opt/miniconda3
    rm -f Miniconda3-*.sh
    
    # Configure conda
    /opt/miniconda3/bin/conda init bash
    /opt/miniconda3/bin/conda config --add channels defaults
    /opt/miniconda3/bin/conda config --add channels bioconda
    /opt/miniconda3/bin/conda config --add channels conda-forge
    /opt/miniconda3/bin/conda config --set channel_priority strict
    
    # Install boltz
    cd /opt
    git clone --branch main https://github.com/timodonnell/boltz.git boltz
    cd /opt/boltz
    git remote add upstream https://github.com/jwohlwend/boltz.git
    /opt/miniconda3/bin/pip install -e /opt/boltz
    
    # Test boltz and download model weights (boltz2)
    mkdir -p /tmp/test-data
    echo ">A|protein|empty" > /tmp/test-data/protein.fasta
    echo "IVMTQSPATLSLSPGERATLSCRASQSAGFYLAWYQQKPGQAPRLLIYDTSNRATGIPARFSGRGSGTDFT" >> /tmp/test-data/protein.fasta
    cd /tmp/test-data
    PATH="/opt/miniconda3/bin:$PATH" /opt/miniconda3/bin/boltz predict protein.fasta --model boltz2 || true
    
    # Download boltz1 weights as well
    PATH="/opt/miniconda3/bin:$PATH" /opt/miniconda3/bin/boltz predict protein.fasta --model boltz1 || true
    
    # Clean up test data
    rm -rf /tmp/test-data

%environment
    export PATH="/opt/miniconda3/bin:$PATH"

%runscript
    cd /analysis
    exec "$@"

%startscript
    # This runs when the container starts as a service/daemon
    cd /analysis

%help
    This container provides Boltz for protein structure prediction.
    
    Usage:
        apptainer run boltz.sif boltz predict input.fasta
        apptainer exec boltz.sif boltz --help
        
    The container includes:
    - Boltz1 and Boltz2 models (weights pre-downloaded)
    - CUDA support for GPU acceleration
    - Conda environment with all dependencies
    
    Working directory: /analysis
    
%labels
    Author YourName
    Version 1.0
    Description Boltz protein structure prediction tool
    
%test
    # Test that boltz is available and working
    boltz --help
    conda --version
    python --version 